Задача на умение работать с: строками, Set, Map, регулярные выражения*, работа с файлами**.

Война и мир:
1. Скачать книгу "Война и мир" https://www.dropbox.com/s/8mstiwnx9o9btw4/%D0%B2%D0%BE%D0%B9%D0%BD%D0%B0%20%D0%B8%20%D0%BC%D0%B8%D1%80_%D0%BA%D0%BD%D0%B8%D0%B3%D0%B0.txt?dl=0 на компьютер.
2. Работа с коллекциями:
	2.0 Знаки препинания, пробелы и переводы строк - это не слова. Регистр в словах имеет значение.
	2.1 Найти в тексте все уникальные слова и поместить их в коллекцию Set.
	2.2 Найти в тексте топ 10 слов и вывести количество этих слов используя Map.
	Отсортировать по количеству. Распечатать в консоль.
	Пример: Война - 200 раз, Мир - 100 раз и так далее. Знаки препинания, пробелы и переводы строк - это не слова.
3. Написать интерфейс ISearchEngine. Это будет интерфейс в котором будут методы:
	3.1 long search(String text, String word) - Метод возвращает информации о количестве раз которое встречается слово в тексте.
	Первый параметр текст в котором ищем, второй параметр что ищем в тексте
4. Реализовать интерфейс ISearchEngine:
	4.1 Написать класс EasySearch. Реализовать поиск используя метод indexOf из класса String.
	В данной реализации запрещено использовать регулярные выражения в любом виде, для любых задач.
	4.2* Написать класс RegExSearch реализующий интерфейс ISearchEngine. Реализовать поиск при помощи класса Matcher.
	4.3* Написать декоратор SearchEngineNormalizer для ISearchEngine который будет удалять нежелательные символы.
	Любые знаки препинания, лишние пробелы и например переводы строк.
    4.4* Написать декоратор для ISearchEngine который будет позволять искать данные без учёта регистра.
    	Более подробное описание задачи, для понимания чего я хочу:  Тут можно пойти на хитрость, данный класс может
    	просто приводить весь текст и передаваемое слово к нижнему регистру но тут возникает вопрос
    	как данный класс может помочь для RegExSearch.
    	Класс RegExSearch в своей реализации использует регулярные выражения и в случае с регулярными выражениями есть
    	возможность указать свойство CASE_INSENSITIVE для выражение и оно и так станет не чувствительно к регистру.
    	Для того чтобы тут что-то оптимизировать можно воспользоваться оператором instanceof и вычислить таки какого класса
    	нам передали объект ISearchEngine.
    	Данная практика является нежелательной но при этом в некоторых случаях очень эффективной.
5. Используя реализации интерфейса ISearchEngine вывести информацию как часто
   встречаются слова "война", "и" (как союз), "мир" вне зависимости от регистра.