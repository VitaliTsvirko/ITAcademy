/*
 * Author: Vitali Tsvirko
 * Date: 2020.11.28
 * Description:
 * 2. Изучить приоритетность операторов по таблице. Сначала посчитать результаты всех ниже приведённых примеров устно,
 * а потом проверить в IDE (в случае ошибок свериться с таблицей приоритетов, повторять просчёт примеров до полного
 * соответствия). Результатом МОЖЕТ БЫТЬ ОШИБКА компиляции, может быть ошибка выполнения программы или корректный
 * результат. Все значения в этих переменных должны быть записаны в int и boolean переменные. Напротив каждой
 * строчки нужно написать комментарий с результатом и объяснением почему вы получили такой результат.
 *
 *	2.0 ВНИМАНИЕ --8 значит что вам нужно создать переменную, например а, и проинициализировать её 8,
 *       а дальше её использовать как --а. Данная переменная во всех выражениях должна равняться 8;
 *	2.1 5 + 2 / 8
 *	2.2 (5 + 2) / 8
 *	2.3 (5 + 2++) / 8
 *	2.4 (5 + 2++) / --8
 *	2.5 (5 * 2 >> 2++) / --8
 *	2.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
 *	2.7 (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8
 *	2.8 6 - 2 > 3 && 12 * 12 <= 119
 *	2.9 true && false
 */

package HomeWork1;

public class OperatorsPriority {
    public static void main(String[] args) {
        int x2 = 2;
        int x3 = 3;
        int x5 = 5;
        int x7 = 7;
        int x6 = 6;
        int x8 = 8;
        int x12 = 12;
        int x20 = 20;
        int x22 = 22;
        int x68 = 68;
        int x119 = 119;

        /* 2.1 5 + 2 / 8 */
        System.out.println( x5 + x2 / x8 );     // result 5 + 0 = 5

        /* 2.2 (5 + 2) / 8 */
        System.out.println( (x5 + x2) / x8 );   // result 7 / 8 = 0

        /* 2.3 (5 + 2++) / 8 */
        System.out.println( (x5 + x2++) / x8 ); //result 8 / 8 = 0

        /* 2.4 (5 + 2++) / --8 */
        x2 = 2;
        System.out.println( (x5 + x2++) / --x8 );   //result 8 / 7 = 1

        /* 2.5 (5 * 2 >> 2++) / --8 */
        x2 = 2;
        x8 = 8;
        System.out.println( (x5 * x2 >> x2++) / --x8 ); //result 1 / 7 = 0

        /* 2.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8 */
        x2 = 2;
        x8 = 8;
        System.out.println( (x5 + x7 > x20 ? x68 : x22 * x2 >> x2++) / --x8 ); //result 11 / 7 = 1

        /* 2.7 (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8 */
        x2 = 2;
        x8 = 8;
        //System.out.println( (x5 + x7 > x20 ? x68 >= x68 : x22 * x2 >> x2++) / --x8 );
        /* Ошибка в выражении.
           Результатом должен быть int, однако результатом секции true тернарного оператора являеться boolean */

        /* 2.8 6 - 2 > 3 && 12 * 12 <= 119 */
        x2 = 2;
        x8 = 8;
        System.out.println(x6 - x2 > x3 && x12 * x12 <= x119); // 4 > 3 && 114<=119; true && false; result: false

        /*2.9 true && false*/
        boolean b1 = true;
        boolean b0 = false;
        System.out.println( b1 && b0 ); //result = false
    }
}
